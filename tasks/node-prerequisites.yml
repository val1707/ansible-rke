---

# These tasks must be run on all Kubernetes nodes

- name: Install required system packages
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
    state: latest
    update_cache: true


- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Update apt and install docker-ce
  apt:
    pkg:
      - docker-ce={{ docker_version }}
    
    update_cache: true

- name: Install Docker Module for Python
  pip:
    name: docker



- name: Make docker.service.d directory
  file:
    path: /usr/lib/systemd/system/docker.service.d
    state: directory

- name: Set Docker mount flags
  copy:
    dest: /usr/lib/systemd/system/docker.service.d/mount_flags.conf
    content: |
      [Service]
      MountFlags=shared
  register: mount_flags_updated

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  when: mount_flags_updated is changed
  register: system_daemon_reload

- name: Allow dockerroot group to access Docker daemon
  copy:
    content: '{ "group": "dockerroot" }'
    dest: /etc/docker/daemon.json
  register: docker_daemon_config

- name: Restart Docker
  service:
    name: docker
    state: restarted
    enabled: yes
  

- name: Modify user account
  become: true
  user:
    name:  "{{ rke_ssh_user }}"
    groups: docker
    append: yes
  register: user_task


- name: perform docker login for ansible_ssh_user
  shell: |
    su -c ' docker login xxx:5000 -u xxxx -p xxxxx ' "{{ rke_ssh_user }}"
  # become: yes
  # become_user: "{{ ansible_ssh_user }}"
  when: 
    # if use ansible_connection=local, the var ansible_ssh_user will not defined
    - ansible_connection != 'local'
    - ansible_ssh_user is defined
    - ansible_ssh_user != 'root'




- name: Set authorized key taken from file
  authorized_key:
    user: root
    state: present
    key: "{{ lookup('file', '~/.ssh/test') }}"


- name: Create sysctl settings file for bridge settings
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
  register: sysctl_k8s_conf

- name: Load new sysctl settings
  command: sysctl --system
  when: sysctl_k8s_conf is changed



- name: Remove swap volumes from /etc/fstab
  lineinfile:
    path: /etc/fstab
    state: absent
    # This should match all lines with an fstype of "swap"
    regexp: '^[^\s]+\s+[^\s]+\s+swap\s+'
  register: remove_swap_volumes

- name: Disable swap
  command: swapoff --all
  when: remove_swap_volumes is changed
